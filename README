--------
VG101 H8
--------

All of the mandatory exercises have been completed:
	- ex1
	- ex2
	- ex3

---------------
Getting Started
---------------

To run the project, compile the project using the following command:

g++ main.cpp ex1.cpp ex2.cpp ex3.cpp -Wall -Wextra -Werror -pedantic -Wno-unused-result -O2
g++ main.cpp ex2.cpp ex3.cpp circle.cpp triangle.cpp parallelogram.cpp trapezium.cpp car.cpp shape.cpp -Wall -Wextra -Werror -pedantic -Wno-unused-result -O2 -lglut -lGL -lGLU -lm

Then run the output file and select the right exercise.

--------------
Expected input
--------------

Ex3
	Exercise 3 reads input from a file "matrices.txt". It reads two matrices (that are equal in width and height) seperated by a white line.

Ex4
	Exercise 4 reads two userinputs: first it expects a 1 or a 2 (to choose if N or A respectively must be determined).
	Then it expects a second value: the a or M depending on the first choice.

Ex5 expects no input.

------------
Choices made
------------

The code of exercise 3 is very heavily based on the code of last months homework. The code is now adapted to run with C++ functions instead of C functions though.

For exercise 4, I tried my best to make the code as efficient as possible to pass test case 10.
The program uses bitwise operators wherever possible as these are cheap.
The program skips cases where it is certain that the output will be lower than the highest value already obtained.
I sacrificed memory efficiency for speed by having the program start with an array the size of 2^16 and doubling this size whenever it is not enough anymore.
My first approach was resizing the memory for every element added. Going to the doubling method reduced the running time by a bit over half.
The program uses unsigned 64-bit integers to be able to process the input from JOJ.

Exercise 5 satisfies the requirements.

----------
Known bugs
----------

Ex3 and 5 have no known bugs.
Ex4 is fully functional but is not efficient enough and therefore only gets 9/10 on JOJ. The 10th case shows "time exceeded".
The answer it gives for input 10.000.000 is the same as case 10 on JOJ though, so I am certain it is correct.
To pass this test case within the allowed time, I believe I have to change my type of algorithm. I am currently using a brute force algorithm.

----------
Written by
----------

The code in this project is written by Rik (Frederik) de Vries (Student no. 519370990021).
